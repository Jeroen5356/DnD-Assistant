@page "/EditUser/{UserId}"
@inject IViewModelFactory _viewModelFactory;

@if(_editUserViewModel != null)
{
    <div class="row justify-content-center">
        <h2>Edit roles of @_editUserViewModel.UserName</h2>
    </div>
    <div class="row justify-content-start">
        
        <EditForm Model="_editUserViewModel" OnValidSubmit="HandleValidSubmit">
            <div class="form-check">
                @foreach (var role in _editUserViewModel.AllRoles)
                {
                    //TODO: make this work somehow
                    <InputCheckbox @bind-Value="_editUserViewModel.Test(role)" />
                    <label class="form-check-label">@role</label>
                }

            </div>
        </EditForm>
    </div>
    

    
}


@code {
    [Parameter]
    public string UserId { get; set; }
    private EditUserViewModel _editUserViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _editUserViewModel = await _viewModelFactory.CreateEditUserViewModel(UserId);
    }

    private void HandleValidSubmit()
    {

    }

    void CheckBoxClicked(string role, object value)
    {
        if ((bool)value)
        {
            if (!_editUserViewModel.RolesOfUser.Contains(role))
            {
                _editUserViewModel.RolesOfUser.Add(role);
            }
        }
        else
        {
            if (_editUserViewModel.RolesOfUser.Contains(role))
            {
                _editUserViewModel.RolesOfUser.Remove(role);
            }
        }
    }
}
