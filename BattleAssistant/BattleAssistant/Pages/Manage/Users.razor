@page "/Manage/Users"
@attribute [Authorize(Roles = Constants.Role.SuperAdmin)] 
@inject IViewModelFactory _viewModelFactory;
@inject NavigationManager _navigationManager;

<h3>User Management</h3>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Email</th>
            <th scope="col">UserName</th>
            <th scope="col">Roles</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (_manageUsersViewModel != null)
        {
            @foreach (var user in _manageUsersViewModel.UserViewModels)
            {
                <tr>
                    <th scope="row">@user.Id</th>
                    <td>@user.Email</td>
                    <td>@user.UserName</td>
                    <td>@user.Roles.ToString()</td>
                    <td><button class="btn btn-info" @onclick="(() => EditOnClick(user.Id))">Edit</button></td>
                </tr>
            }
        }
        else
        {

        }
    </tbody>
</table>


@code {
    private ManageUsersViewModel _manageUsersViewModel {
        get;
        set;
    }

    protected override async Task OnInitializedAsync()
    {
        _manageUsersViewModel = await _viewModelFactory.CreateManageUsersViewModel();
    }

    private void EditOnClick(string userId)
    {
        _navigationManager.NavigateTo($"EditUser/{userId}");
    }

}
