@page "/Conflict/"
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.SignalR.Client
@using ViewModels
@using BattleAssistant.Components

    <div class="container justify-content-center">
        @if (_conflictViewModel == null)
        {
            <h3>No Conflict yet</h3>
        }
        else
        {
            <div class="row">
                <h3 class="col text-center">@_conflictViewModel.ConflictName</h3>
            </div>
            @if (_conflictViewModel.Teams != null && _conflictViewModel.Teams.Any())
            {
                <div class="row">
                    @for (var i = 0; i < _conflictViewModel.Teams.Count; i++)
                    {
                        <div class="col text-center">
                            <Team TeamViewModel="_conflictViewModel.Teams[i]" />
                        </div>
                    }
                </div> 
            }
        }
    </div>

@code {
    private ConflictViewModel _conflictViewModel { get; set; }
    private Guid _conflictId;
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        SetConflictId();

        await ConnectToHubAsync();

        _conflictViewModel = await _hubConnection.InvokeAsync<ConflictViewModel>("GetConflict", _conflictId);
    }
}

@functions{

    private void SetConflictId()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("Id", out var idStringValues))
        {
            var idString = idStringValues.First();
            if (Guid.TryParse(idString, out var conflictId))
            {
                _conflictId = conflictId;
            }
        }
    }

    private async Task ConnectToHubAsync()
    {
        _hubConnection = new HubConnectionBuilder()
        .WithUrl(navigationManager.ToAbsoluteUri("/conflictHub"))
        .Build();

        //StateHasChanged();
        await _hubConnection.StartAsync();
    }
}
